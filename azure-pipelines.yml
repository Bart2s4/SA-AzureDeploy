# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- "*"

stages:
  - stage: test
    jobs:
        - job : 'validateandtest'
          pool:
            vmimage: windows-latest
          steps:
          
          - task: CopyFiles@2
            inputs:
              Contents: '**\StorageAccount\*'
              TargetFolder: '$(build.artifactstagingdirectory)'
          
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Pipeline.Workspace)'
              artifact: 'drop-arm'
              publishLocation: 'pipeline'
          
          - task: AzureResourceManagerTemplateDeployment@3
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Deploy-ARM-Storage-Connector'
              subscriptionId: '783e15d0-ba8f-46fb-9591-a86915329a8d'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'RG-ARMdeploymentTest'
              location: 'West Europe'
              templateLocation: 'Linked artifact'
              csmFile: '$(Build.SourceDirectory)\StorageAccount\azuredeploy.json'
              csmParametersFile: '$(Build.SourcesDirectory)\StorageAccount\azuredeploy.parameters.json'
              deploymentMode: 'Validation'
              
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: 'Install-Module Az.Resources -RequiredVersion 1.12.1-preview -AllowPrerelease -Force -Scope CurrentUser'

          - task: AzurePowerShell@5
            inputs:
              azureSubscription: 'Deploy-ARM-Storage-Connector'
              ScriptType: 'InlineScript'
              Inline: |
                $Parameters = @{
                  ResourcegroupName     = "ARMDeploymentTest"
                  Templatefile          = ".\StorageAccount\azuredeploy.json"
                  TemplateParameterfile = ".\StorageAccount\azuredeploy.parameters.json"
                  Mode                  = 'Incremental'
                 }
                $Result = Get-AzResourceGroupDeploymentWhatIfResult @Parameters
                $Result

                - task: AzurePowerShell@5
                  displayName: "Check for deletion"
                  inputs:
                    azureSubscription: 'Deploy-ARM-Storage-Connector'
                    ScriptType: 'FilePath'
                    ScriptPath: '$(Build.SourcesDirectory)/Tests/CheckForDeletion.ps1'
                    ScriptArguments: '-ResourceGroup RG-ARMdeploymentTest'
                    FailOnStandardError: true
                    azurePowerShellVersion: 'LatestVersion'